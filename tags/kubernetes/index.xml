<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on 云原生实验室</title>
    <link>https://fuckcloudnative.io/tags/kubernetes/</link>
    <description>Recent content in kubernetes on 云原生实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>yangchuansheng33@gmail.com (米开朗基杨)</managingEditor>
    <webMaster>yangchuansheng33@gmail.com (米开朗基杨)</webMaster>
    <lastBuildDate>Wed, 25 Sep 2019 13:00:34 +0800</lastBuildDate>
    
	<atom:link href="https://fuckcloudnative.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>kubernetes 高可用部署工具：sealos</title>
      <link>https://fuckcloudnative.io/posts/sealos/</link>
      <pubDate>Mon, 26 Aug 2019 11:07:04 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/sealos/</guid>
      <description>sealos 项目地址：https://github.com/fanux/sealos 本文教你如何用一条命令构建 k8s 高可用集群且不依赖 haproxy 和 keepaliv</description>
    </item>
    
    <item>
      <title>kubectl 创建 Pod 背后到底发生了什么？</title>
      <link>https://fuckcloudnative.io/posts/what-happens-when-k8s/</link>
      <pubDate>Fri, 01 Jun 2018 11:36:45 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/what-happens-when-k8s/</guid>
      <description>想象一下，如果我想将 nginx 部署到 Kubernetes 集群，我可能会在终端中输入类似这样的命令： $ kubectl run --image=nginx --replicas=3 然后回车。几秒钟后，你就会看到三个 nginx pod 分布在所有的工作节点</description>
    </item>
    
    <item>
      <title>手把手教你部署 Istio 1.3</title>
      <link>https://fuckcloudnative.io/posts/istio-1.3-tour/</link>
      <pubDate>Wed, 25 Sep 2019 13:00:34 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/istio-1.3-tour/</guid>
      <description></description>
    </item>
    
    <item>
      <title>KubeSphere 安装教程</title>
      <link>https://fuckcloudnative.io/posts/kubesphere/</link>
      <pubDate>Thu, 19 Sep 2019 21:53:07 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubesphere/</guid>
      <description>2018 年 7 月份，青云在 Cloud Insight 云计算峰会上推出了一款全新的容器平台——KubeSphere，旨在帮助企业快速低成本管理容器。并且 KubeSphere 本身是开源的，它是</description>
    </item>
    
    <item>
      <title>Istio 1.3 发布，HTTP 遥测不再需要 Mixer</title>
      <link>https://fuckcloudnative.io/posts/istio-1.3/</link>
      <pubDate>Sat, 14 Sep 2019 23:31:46 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/istio-1.3/</guid>
      <description>Istio 是 Google、IBM 和 Lyft 联合开源的服务网格（Service Mesh）框架，旨在解决大量微服务的发现、连接、管理、监控以及安全等问题。 Istio 对</description>
    </item>
    
    <item>
      <title>Kubeman 使用指南</title>
      <link>https://fuckcloudnative.io/posts/kubeman/</link>
      <pubDate>Sun, 08 Sep 2019 17:22:38 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubeman/</guid>
      <description>周末闲逛 Twitter 时，发现一个很有意思的小工具叫 kubeman，野心倒是不小，励志成为 kubectl 的替代品，用于实时监控和管理 kubernetes 集群，还可以调试与 Istio 相关的问题</description>
    </item>
    
    <item>
      <title>Contour 学习笔记（二）：使用级联功能实现蓝绿部署和金丝雀发布</title>
      <link>https://fuckcloudnative.io/posts/blue-green-deployments-contours-ingressroute/</link>
      <pubDate>Fri, 06 Sep 2019 02:08:54 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/blue-green-deployments-contours-ingressroute/</guid>
      <description>上篇文章介绍了 Contour 分布式架构的工作原理，顺便简单介绍了下 IngressRoute 的使用方式。本文将探讨 IngressRoute 更高级的用法，其中级联功能是重点。 1. IngressRoute 大入门 上篇文章在 examples/example-workload 目录</description>
    </item>
    
    <item>
      <title>Contour 学习笔记（一）：使用 Contour 接管 Kubernetes 的南北流量</title>
      <link>https://fuckcloudnative.io/posts/use-envoy-as-a-kubernetes-ingress/</link>
      <pubDate>Thu, 29 Aug 2019 15:38:15 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/use-envoy-as-a-kubernetes-ingress/</guid>
      <description>在 Kubernetes 中运行大规模以 Web 为中心的工作负载，最关键的需求之一就是在 L7 层实现高效流畅的入口流量管理。自从第一批 Kubernetes Ingress Controller 开发完成以来，Envoy（由 Matt Klein</description>
    </item>
    
    <item>
      <title>使用 Docker 和 Jenkins 持续交付</title>
      <link>https://fuckcloudnative.io/posts/continuous-delivery-with-docker-jenkins-2nd-edition/</link>
      <pubDate>Wed, 21 Aug 2019 14:03:42 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/continuous-delivery-with-docker-jenkins-2nd-edition/</guid>
      <description>今天没有长篇大论，给大家推荐一本新书，书名：Continuous Delivery with Docker and Jenkins。封面如图所示： 以下内容纯属凑字数 本书结合了 Jenkins 和 Docker 的优</description>
    </item>
    
    <item>
      <title>Kubernetes RBAC 策略审计指南</title>
      <link>https://fuckcloudnative.io/posts/tools-and-methods-for-auditing-kubernetes-rbac-policies/</link>
      <pubDate>Tue, 20 Aug 2019 14:18:15 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/tools-and-methods-for-auditing-kubernetes-rbac-policies/</guid>
      <description>认证与授权对任何安全系统来说都至关重要，Kubernetes 也不例外。即使我们不是安全工作人员，也需要了解我们的 Kubernetes 集群是否具有足够的访问控制</description>
    </item>
    
    <item>
      <title>云原生周报：第 3 期</title>
      <link>https://fuckcloudnative.io/posts/cloud-native-weekly-3/</link>
      <pubDate>Sun, 21 Jul 2019 21:25:34 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/cloud-native-weekly-3/</guid>
      <description>本文首发于：微信公众号「云原生实验室」，公众号ID：cloud_native_yang。 这是云原生周报第 3 期，主要分享云原生社区最新开源项目</description>
    </item>
    
    <item>
      <title>Kubernetes 1.15 详细介绍</title>
      <link>https://fuckcloudnative.io/posts/whats-new-kubernetes-1-15/</link>
      <pubDate>Thu, 18 Jul 2019 08:38:48 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/whats-new-kubernetes-1-15/</guid>
      <description>2019 年 6 月 20 日，Kubernetes 重磅发布了 1.15 版本，不过笔者忙到现在才有空认真来看一下到底更新了哪些东西。这一版本更新主要是针对稳定性的持续</description>
    </item>
    
    <item>
      <title>云原生周报第 2 期</title>
      <link>https://fuckcloudnative.io/posts/cloud-native-weekly-2/</link>
      <pubDate>Fri, 05 Jul 2019 22:11:46 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/cloud-native-weekly-2/</guid>
      <description>这是云原生周报第 2 期，主要分享云原生社区最新开源项目，优秀博客、电子书和视频。 1. 开源项目推荐 Kube Forwarder : Kubernetes 端口转发的 GUI 客户端，支持多集群，断开后可</description>
    </item>
    
    <item>
      <title>云原生周报第 1 期</title>
      <link>https://fuckcloudnative.io/posts/cloud-native-weekly-1/</link>
      <pubDate>Thu, 27 Jun 2019 16:12:50 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/cloud-native-weekly-1/</guid>
      <description>1. 前言 云原生不但可以很好的支持互联网应用，也在深刻影响着新的计算架构、新的智能数据应用。以容器、服务网格、微服务、Serverless 为代表</description>
    </item>
    
    <item>
      <title>Kubernetes Pod 驱逐详解</title>
      <link>https://fuckcloudnative.io/posts/kubernetes-eviction/</link>
      <pubDate>Fri, 17 May 2019 14:32:59 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubernetes-eviction/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes 内存资源限制实战</title>
      <link>https://fuckcloudnative.io/posts/memory-limit-of-pod-and-oom-killer/</link>
      <pubDate>Mon, 29 Apr 2019 11:43:29 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/memory-limit-of-pod-and-oom-killer/</guid>
      <description></description>
    </item>
    
    <item>
      <title>在 Kubernetes 中实现零宕机部署应用</title>
      <link>https://fuckcloudnative.io/posts/kubernetes-zero-downtime-deployment/</link>
      <pubDate>Fri, 26 Apr 2019 22:27:56 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubernetes-zero-downtime-deployment/</guid>
      <description></description>
    </item>
    
    <item>
      <title>当 kube-proxy 遇到连接重置</title>
      <link>https://fuckcloudnative.io/posts/kube-proxy-subtleties-debugging-an-intermittent-connection-reset/</link>
      <pubDate>Thu, 04 Apr 2019 13:18:03 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kube-proxy-subtleties-debugging-an-intermittent-connection-reset/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes 控制器的工作原理解读</title>
      <link>https://fuckcloudnative.io/posts/a-deep-dive-into-kubernetes-controllers/</link>
      <pubDate>Mon, 11 Mar 2019 17:36:27 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/a-deep-dive-into-kubernetes-controllers/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes 设计哲学</title>
      <link>https://fuckcloudnative.io/posts/the-mechanics-of-kubernetes/</link>
      <pubDate>Sat, 23 Feb 2019 23:35:42 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/the-mechanics-of-kubernetes/</guid>
      <description>原文地址：The Mechanics of Kubernetes Kubernetes 是一个用于在一组节点（通常称之为集群）上托管容器化应用程序的容器编排引擎。本系列教程旨在通过系统建模的方法帮助大家更</description>
    </item>
    
    <item>
      <title>Etcd 的分布式一致性详解</title>
      <link>https://fuckcloudnative.io/posts/etcd-server-learner/</link>
      <pubDate>Wed, 30 Jan 2019 18:45:42 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/etcd-server-learner/</guid>
      <description></description>
    </item>
    
    <item>
      <title>etcd 集群大小迷思</title>
      <link>https://fuckcloudnative.io/posts/etcd-cluster-number/</link>
      <pubDate>Wed, 30 Jan 2019 13:13:56 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/etcd-cluster-number/</guid>
      <description></description>
    </item>
    
    <item>
      <title>熔断与异常检测在 Istio 中的应用</title>
      <link>https://fuckcloudnative.io/posts/circuit_breaking-and-outlier-detection-in-istio/</link>
      <pubDate>Fri, 28 Dec 2018 17:23:43 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/circuit_breaking-and-outlier-detection-in-istio/</guid>
      <description>在微服务领域，各个服务需要在网络上执行大量的调用。而网络是很脆弱的，如果某个服务繁忙或者无法响应请求，将有可能引发集群的大规模级联故障，从而</description>
    </item>
    
    <item>
      <title>优化生产环境中的 Kubernetes 资源分配</title>
      <link>https://fuckcloudnative.io/posts/optimizing-kubernetes-resource-allocation-production/</link>
      <pubDate>Tue, 18 Dec 2018 16:15:12 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/optimizing-kubernetes-resource-allocation-production/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes 设计与开发原则</title>
      <link>https://fuckcloudnative.io/posts/kubernetes-design-and-development-explained/</link>
      <pubDate>Tue, 04 Dec 2018 17:35:59 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubernetes-design-and-development-explained/</guid>
      <description>原文地址：Kubernetes Design and Development Explained 本文是 8 月 29 日至 31 日在温哥华举行的开源峰会上作者演讲内容的一部分，详细内容请查看下文。 Kubernetes 正迅速成为在分</description>
    </item>
    
    <item>
      <title>Istio 的高级边缘流量控制（二）</title>
      <link>https://fuckcloudnative.io/posts/egress-gateway-2/</link>
      <pubDate>Wed, 28 Nov 2018 18:19:56 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/egress-gateway-2/</guid>
      <description>上一节我演示了如何通过 Egress Gateway 引导 Istio 的出口 HTTP 流量，但到 443 端口的 HTTPS 流量没有通过 Egress Gateway，而是直接转到 edition.cnn.com 。Istio 出口流量的 TLS 演示了如何在</description>
    </item>
    
    <item>
      <title>KubeRBS 助力 Kubernetes 自动回滚，让你晚上睡得更香</title>
      <link>https://fuckcloudnative.io/posts/kuberbs-for-automatic-kubernetes-rollbacks-so-you-can-sleep-better-at-night/</link>
      <pubDate>Wed, 28 Nov 2018 11:43:54 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kuberbs-for-automatic-kubernetes-rollbacks-so-you-can-sleep-better-at-night/</guid>
      <description>随着越来越多的企业开始大量使用 Kubernetes，持续交付越来越趋向于标准化，软件版本的更新也越来越趋向于自动化。但你有没有想过，如果新发</description>
    </item>
    
    <item>
      <title>Istio 的高级边缘流量控制（一）</title>
      <link>https://fuckcloudnative.io/posts/egress-gateway-1/</link>
      <pubDate>Mon, 26 Nov 2018 14:43:51 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/egress-gateway-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>在服务网格内部调用外部 TCP 服务</title>
      <link>https://fuckcloudnative.io/posts/egress-tcp/</link>
      <pubDate>Fri, 23 Nov 2018 14:18:48 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/egress-tcp/</guid>
      <description></description>
    </item>
    
    <item>
      <title>在服务网格内部调用外部 Web 服务</title>
      <link>https://fuckcloudnative.io/posts/egress-https/</link>
      <pubDate>Wed, 21 Nov 2018 17:09:25 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/egress-https/</guid>
      <description></description>
    </item>
    
    <item>
      <title>深入理解 Kubernetes API Server（一）</title>
      <link>https://fuckcloudnative.io/posts/kubernetes-api-server-part-1/</link>
      <pubDate>Mon, 19 Nov 2018 13:42:03 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubernetes-api-server-part-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Istio 出口流量的 TLS</title>
      <link>https://fuckcloudnative.io/posts/egress-tls-origination/</link>
      <pubDate>Fri, 16 Nov 2018 15:56:49 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/egress-tls-origination/</guid>
      <description>本文主要内容来自 Istio 官方文档，并对其进行了大量扩展和补充。 控制出口流量任务演示了如何从网格内部的应用程序访问 Kubernetes 集群外部的 HTTP 和 HTTPS 服务, 如该主题中</description>
    </item>
    
    <item>
      <title>深入理解 Kubernetes 资源限制：CPU</title>
      <link>https://fuckcloudnative.io/posts/understanding-resource-limits-in-kubernetes-cpu-time/</link>
      <pubDate>Sat, 10 Nov 2018 13:32:30 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/understanding-resource-limits-in-kubernetes-cpu-time/</guid>
      <description>原文地址：Understanding resource limits in kubernetes: cpu time 作者：Mark Betz 译者：杨传胜 建议先阅读下面的系列文章： Linux Cgroup 入门教程：基本概念 Linux Cgroup 入门教程：C</description>
    </item>
    
    <item>
      <title>Kubernetes 准入控制介绍</title>
      <link>https://fuckcloudnative.io/posts/kubernetes-extensible-admission/</link>
      <pubDate>Sat, 22 Sep 2018 11:17:11 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubernetes-extensible-admission/</guid>
      <description>1. 什么是准入控制 准入控制（Admission Controller）是 Kubernetes API Server 用于拦截请求的一种手段。Admission 可以做到对请求的资源对象</description>
    </item>
    
    <item>
      <title>Kubernetes DNS 高阶指南</title>
      <link>https://fuckcloudnative.io/posts/kubernetes-dns/</link>
      <pubDate>Mon, 27 Aug 2018 18:11:52 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubernetes-dns/</guid>
      <description>DNS 是 Kubernetes 的核心功能之一，Kubernetes 通过 kube-dns 或 CoreDNS 作为集群的必备扩展来提供命名服务，通过 DNS 扩展，每一个 Service 都会产生一个独一无二的 FQDN（F</description>
    </item>
    
    <item>
      <title>控制 Egress 流量</title>
      <link>https://fuckcloudnative.io/posts/control-egress-traffic/</link>
      <pubDate>Thu, 16 Aug 2018 13:40:27 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/control-egress-traffic/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据包在 Istio 网格中的生命周期（下）</title>
      <link>https://fuckcloudnative.io/posts/where-is-the-request-2/</link>
      <pubDate>Mon, 13 Aug 2018 16:30:30 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/where-is-the-request-2/</guid>
      <description>书接前文，上文我们通过跟踪集群外通过 ingressgateway 发起的请求来探寻流量在 Istio 服务网格之间的流动方向，先部署 bookinfo 示例应用，然后创建一个监听在 ingressgateway 上的 GateWay 和 Virt</description>
    </item>
    
    <item>
      <title>数据包在 Istio 网格中的生命周期（上）</title>
      <link>https://fuckcloudnative.io/posts/where-is-the-request-1/</link>
      <pubDate>Wed, 08 Aug 2018 16:56:31 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/where-is-the-request-1/</guid>
      <description>通过前几篇文章的学习与实践，我们对 Gateway、VirtualService 和 Destinationrule 的概念和原理有了初步的认知，本篇将对这几个对象资源的配置文</description>
    </item>
    
    <item>
      <title>Kubernetes 资源管理概述</title>
      <link>https://fuckcloudnative.io/posts/kubernetes-resource-management/</link>
      <pubDate>Fri, 03 Aug 2018 17:34:19 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubernetes-resource-management/</guid>
      <description>本文转载自 Cizixs 的博客。 1. 什么是资源？ 在 kubernetes 中，有两个基础但是非常重要的概念：node 和 pod。node 翻译成节点，是对集群资源的抽象；pod 是对</description>
    </item>
    
    <item>
      <title>使用自定义指标进行弹性伸缩</title>
      <link>https://fuckcloudnative.io/posts/custom-metrics-hpa/</link>
      <pubDate>Tue, 19 Jun 2018 09:02:52 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/custom-metrics-hpa/</guid>
      <description>从 Kubernetes 1.8 开始，资源使用指标（如容器 CPU 和内存使用率）可以通过 Metrics API 在 Kubernetes 中获取。 这些指标可以直接被用户访问(例如通过使用 kubectl top 命令)，或由集群中的控制</description>
    </item>
    
    <item>
      <title>Kubernetes API 扩展</title>
      <link>https://fuckcloudnative.io/posts/api-aggregation/</link>
      <pubDate>Tue, 19 Jun 2018 06:15:06 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/api-aggregation/</guid>
      <description>Aggregated（聚合的）API server 是为了将原来的 API server 这个巨石（monolithic）应用给拆分开，为了方便用户开发自己的 API server 集成进来，而</description>
    </item>
    
    <item>
      <title> 修复 Service Endpoint 更新的延迟</title>
      <link>https://fuckcloudnative.io/posts/kubernetes-fixing-delayed-service-endpoint-updates/</link>
      <pubDate>Fri, 15 Jun 2018 14:02:11 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubernetes-fixing-delayed-service-endpoint-updates/</guid>
      <description>几个月前，我在更新 Kubernetes 集群中的 Deployment 时发现了一个很奇怪的连接超时现象，在更新 Deployment 之后的 30 秒到两分钟左右，所有与以该 Deployment 作为服务后端的 Service 的连接都会超时或</description>
    </item>
    
    <item>
      <title>Kubernetes 的奇技淫巧</title>
      <link>https://fuckcloudnative.io/posts/kubernetes-fucking-trick/</link>
      <pubDate>Mon, 11 Jun 2018 04:35:48 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kubernetes-fucking-trick/</guid>
      <description>Kubernetes 作为云原生时代的“操作系统”，熟悉和使用它是每名用户（User）的必备技能。如果你正在 Kubernetes 上工作，你需要正确的工具和技巧来确保 Kubernetes 集群的高可用</description>
    </item>
    
    <item>
      <title>Descheduler 使用指南</title>
      <link>https://fuckcloudnative.io/posts/introduce-kubernetes-descheduler/</link>
      <pubDate>Wed, 23 May 2018 10:23:29 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/introduce-kubernetes-descheduler/</guid>
      <description>kube-scheduler 是 Kubernetes 中负责调度的组件，它本身的调度功能已经很强大了。但由于 Kubernetes 集群非常活跃，它的状态会随时间而改变，由于各种原因，你可能需要将已经运行的 Pod 移</description>
    </item>
    
    <item>
      <title>Kubernetes 中 Pod 的生命周期管理</title>
      <link>https://fuckcloudnative.io/posts/pods-life/</link>
      <pubDate>Thu, 03 May 2018 12:08:01 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/pods-life/</guid>
      <description>本文我们将从实践者的角度仔细研究整个pod生命周期，包括如何影响启动和关闭行为，并通过实践来理解对应用程序健康状况的检查。 1. Pod 的生命周期 Pod phase</description>
    </item>
    
    <item>
      <title>Kube-router 使用指南</title>
      <link>https://fuckcloudnative.io/posts/kube-router/</link>
      <pubDate>Fri, 20 Apr 2018 04:36:40 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/kube-router/</guid>
      <description>Kube-router 是一个挺有想法的项目，兼备了 calico 和 kube-proxy 的功能，是基于 Kubernetes 网络设计的一个集负载均衡器、防火墙和容器网络的综合方案。 1. 体系架构 Kube-router 是围绕 观察者 和 控制器</description>
    </item>
    
    <item>
      <title>CRI-O 简介</title>
      <link>https://fuckcloudnative.io/posts/cri-o/</link>
      <pubDate>Tue, 03 Apr 2018 08:11:38 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/cri-o/</guid>
      <description>上一篇 https://www.yangcs.net/posts/container-runtime/ 介绍了什么是容器运行时，并列出了不同的容器运行时。本篇重点介绍其中的一种容器运行时 CRI-O。 1. CRI-O 的诞生 当容器运行时（Contain</description>
    </item>
    
    <item>
      <title>Kubernetes 中的容器运行时</title>
      <link>https://fuckcloudnative.io/posts/container-runtime/</link>
      <pubDate>Tue, 03 Apr 2018 06:50:43 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/container-runtime/</guid>
      <description>容器运行时（Container Runtime）是 Kubernetes 最重要的组件之一，负责真正管理镜像和容器的生命周期。Kubelet 通过 Container Runtime Interface (CRI) 与容器运行时</description>
    </item>
    
    <item>
      <title>Kubernetes 使用集群联邦实现多集群管理</title>
      <link>https://fuckcloudnative.io/posts/federation/</link>
      <pubDate>Thu, 22 Mar 2018 09:36:27 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/federation/</guid>
      <description>在云计算环境中，服务的作用距离范围从近到远一般可以有： 同主机（Host，Node） 跨主机同可用区（Available Zone） 跨可用区同地区</description>
    </item>
    
    <item>
      <title>Kubernetes 网络扩展</title>
      <link>https://fuckcloudnative.io/posts/k8s-network-expand/</link>
      <pubDate>Sun, 11 Feb 2018 10:40:33 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/k8s-network-expand/</guid>
      <description>1. Kubernetes 中服务暴露的方式 k8s 的服务暴露分为以下几种情况： hostNetwork hostPort NodePort LoadBalancer Ingress 说是暴露 Pod 其实跟暴露 Service 是一回事，因为 Pod 就是 Service 的 backend。 HostNetwork 这是一种直接定义</description>
    </item>
    
    <item>
      <title>calico Router reflection(RR) 模式介绍及部署</title>
      <link>https://fuckcloudnative.io/posts/calico-rr/</link>
      <pubDate>Thu, 01 Feb 2018 11:03:49 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/calico-rr/</guid>
      <description>1. 名词解释 endpoint：接入到网络中的设备称为 endpoint ❤ AS：网络自治系统，一个完全自治的网络，通过 BGP 协议与其它 AS 交换路由信息 ibgp：AS 内</description>
    </item>
    
  </channel>
</rss>