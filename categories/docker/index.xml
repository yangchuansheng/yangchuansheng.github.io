<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on 云原生实验室</title>
    <link>https://fuckcloudnative.io/categories/docker/</link>
    <description>Recent content in docker on 云原生实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>yangchuansheng33@gmail.com (米开朗基杨)</managingEditor>
    <webMaster>yangchuansheng33@gmail.com (米开朗基杨)</webMaster>
    <lastBuildDate>Thu, 19 Mar 2020 23:25:39 +0800</lastBuildDate>
    
	<atom:link href="https://fuckcloudnative.io/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker 镜像构建教程：减小镜像体积</title>
      <link>https://fuckcloudnative.io/posts/docker-images-part1-reducing-image-size/</link>
      <pubDate>Thu, 19 Mar 2020 23:25:39 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/docker-images-part1-reducing-image-size/</guid>
      <description>原文链接：Docker Images : Part I - Reducing Image Size 对于刚接触容器的人来说，他们很容易被自己构建的 Docker 镜像体积吓到，我只需要一个几 MB 的可执行文件而已，为何镜</description>
    </item>
    
    <item>
      <title>使用 buildx 构建多平台 Docker 镜像</title>
      <link>https://fuckcloudnative.io/posts/multiarch-docker-with-buildx/</link>
      <pubDate>Sun, 17 Nov 2019 13:54:43 -0500</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/multiarch-docker-with-buildx/</guid>
      <description>在工作和生活中，我们可能经常需要将某个程序跑在不同的 CPU 架构上，比如让某些不可描述的软件运行在树莓派或嵌入式路由器设备上。特别是 Docker 席卷全球之后</description>
    </item>
    
    <item>
      <title>Podman 使用指南</title>
      <link>https://fuckcloudnative.io/posts/podman-sidecar/</link>
      <pubDate>Fri, 18 Oct 2019 00:16:16 -0400</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/podman-sidecar/</guid>
      <description>郑重声明：本文不是 Podman 的入门篇，入门请阅读这篇文章：再见 Docker，是时候拥抱下一代容器工具了 Podman 原来是 CRI-O 项目的一部分，后来被分离成一个单独的</description>
    </item>
    
    <item>
      <title>你确定你会写 Dockerfile 吗？</title>
      <link>https://fuckcloudnative.io/posts/intro-guide-to-dockerfile-best-practices/</link>
      <pubDate>Tue, 09 Jul 2019 17:53:17 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/intro-guide-to-dockerfile-best-practices/</guid>
      <description>原文链接：Intro Guide to Dockerfile Best Practices 如今 GitHub 仓库中已经包含了成千上万的 Dockerfile，但并不是所有的 Dockerfile 都是高效的。本文将从五个方面来介绍 Dockerfile 的最</description>
    </item>
    
    <item>
      <title>使用 envoy-docker-shim 替代 docker-proxy</title>
      <link>https://fuckcloudnative.io/posts/envoy-docker-shim/</link>
      <pubDate>Fri, 22 Jun 2018 08:22:07 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/envoy-docker-shim/</guid>
      <description>在过去一年中，服务网格技术的崛起引发了吃瓜群众对 Istio 的持续关注，而 Istio 的核心组件 Envoy 是一款由 Lyft 开源的，使用 C++ 编写的 L7 代理和通信总线，目前是 CNCF 旗下的</description>
    </item>
    
    <item>
      <title>docker 在本地如何管理 image（镜像）?</title>
      <link>https://fuckcloudnative.io/posts/how-manage-image/</link>
      <pubDate>Mon, 02 Apr 2018 05:12:18 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/how-manage-image/</guid>
      <description>docker 里面可以通过 docker pull、docker build、docker commit、docker load、docker import 等方式得到一个 image，得</description>
    </item>
    
    <item>
      <title>Device Mapper基础教程：Docker 中使用 devicemapper 存储驱动</title>
      <link>https://fuckcloudnative.io/posts/use-devicemapper/</link>
      <pubDate>Mon, 22 Jan 2018 16:17:11 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/use-devicemapper/</guid>
      <description>1. 准备条件 devicemapper 存储驱动是 RHEL, CentOS 和 Oracle Linux 系统上唯一一个支持 Docker EE 和 Commercially Supported Docker Engine (CS-Engine) 的存储驱动，具体参考 Product compatibility matrix. devicemapper 在 CentOS, Fedora, Ubuntu 和 Debian 上也支持 Docker CE。 如果你更改了 Docker 的存</description>
    </item>
    
    <item>
      <title>Device Mapper系列基础教程：Thin Provisioning 实践</title>
      <link>https://fuckcloudnative.io/posts/thin-provisioning/</link>
      <pubDate>Mon, 22 Jan 2018 16:00:22 +0800</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/thin-provisioning/</guid>
      <description>1. Thin Provisioning Snapshot 演示 上一篇我们介绍了 Device Mapper 框架的技术原理及其核心概念，下面，我们用一系列的命令来演示一下 Device Mapper 的 Thin Provisioning Snapshot 是怎么玩的。 首先，我们需要先建两个</description>
    </item>
    
    <item>
      <title>Device Mapper系列基础教程：Device Mapper 的原理</title>
      <link>https://fuckcloudnative.io/posts/devicemapper-theory/</link>
      <pubDate>Sun, 21 Jan 2018 09:28:41 +0000</pubDate>
      <author>yangchuansheng33@gmail.com (米开朗基杨)</author>
      <guid>https://fuckcloudnative.io/posts/devicemapper-theory/</guid>
      <description>1. Device Mapper 简介 .notice{padding:18px;line-height:24px;margin-bottom:24px;margin-top:30px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:&#34;Font Awesome 5 Free&#34;,FontAwesome;font-weight:600}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:&#39;\f071&#39;}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:&#39;\f05a&#39;}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:&#39;\f06a&#39;}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:&#39;\f058&#39;}.notice.ti</description>
    </item>
    
  </channel>
</rss>